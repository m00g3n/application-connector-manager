---
# Source: application-connector/charts/central-application-connectivity-validator/templates/service-account.yamlo
apiVersion: v1
kind: ServiceAccount
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    app: central-application-connectivity-validator
    release: application-connector
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
---
# Source: application-connector/charts/central-application-gateway/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: central-application-gateway
  namespace: kyma-system
  labels:
    app: central-application-gateway
    release: application-connector
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: central-application-connectivity-validator-role
  labels:
    app: central-application-connectivity-validator
    release: application-connector
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
rules:
  - apiGroups: ["applicationconnector.kyma-project.io"]
    resources: ["applications"]
    verbs: ["get", "list", "watch"]
---
# Source: application-connector/charts/central-application-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: central-application-gateway-role
  labels:
    app: central-application-gateway
    release: application-connector
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
rules:
  - apiGroups: ["applicationconnector.kyma-project.io"]
    resources: ["applications"]
    verbs: ["get"]
  - apiGroups: ["*"]
    resources: ["secrets"]
    verbs: ["get"]
---
# Source: application-connector/templates/cluster-role-binding.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: application-connector-application-connector
  labels:
    app: application-connector
    release: application-connector
    app.kubernetes.io/name: application-connector
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
rules:
  - apiGroups: ["applicationconnector.kyma-project.io"]
    resources: ["applications"]
    verbs: ["get", "list", "update", "create", "delete", "watch"]
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: central-application-connectivity-validator-rolebinding
  labels:
    app: central-application-connectivity-validator
    release: application-connector
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
subjects:
  - kind: User
    name: system:serviceaccount:kyma-system:central-application-connectivity-validator
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: central-application-connectivity-validator-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: application-connector/charts/central-application-gateway/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: central-application-gateway-rolebinding
  labels:
    app: central-application-gateway
    release: application-connector
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
subjects:
  - kind: User
    name: system:serviceaccount:kyma-system:central-application-gateway
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: central-application-gateway-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: application-connector/templates/cluster-role-binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: application-connector-application-connector
  labels:
    app: application-connector
    release: application-connector
    app.kubernetes.io/name: application-connector
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
subjects:
  - kind: User
    name: system:serviceaccount:kyma-system:default
    apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: application-connector-application-connector
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    application: central-application-connectivity-validator
    app: central-application-connectivity-validator
    release: application-connector
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
spec:
  type: ClusterIP
  ports:
    - port: 8081
      protocol: TCP
      name: http-api-port
    - port: 8080
      protocol: TCP
      name: http-proxy
  selector:
    app: central-application-connectivity-validator
    release: application-connector
---
# Source: application-connector/charts/central-application-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: central-application-gateway
  namespace: kyma-system
  labels:
    application: central-application-gateway
    app: central-application-gateway
    release: application-connector
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
spec:
  type: ClusterIP
  ports:
    - port: 8081
      protocol: TCP
      name: http-api-port
    - port: 8080
      protocol: TCP
      name: http-proxy
    - port: 8082
      protocol: TCP
      name: http-proxy-mps
  selector:
    app: central-application-gateway
    release: application-connector
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: central-application-gateway-priority-class
value: 2000000
globalDefault: false
description: "Scheduling priority of central-application-gateway component. By default, central-application-gateway should not be blocked by unschedulable user workloads."
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: central-application-connectivity-validator-priority-class
value: 2000000
globalDefault: false
description: "Scheduling priority of central-application-connectivity-validator component. By default, central-application-connectivity-validator should not be blocked by unschedulable user workloads."
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    app: central-application-connectivity-validator
    release: application-connector
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: central-application-connectivity-validator
      release: application-connector
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: central-application-connectivity-validator
        app.kubernetes.io/part-of: application-connector-manager
        release: application-connector
    spec:
      serviceAccountName: central-application-connectivity-validator
      containers:
        - name: central-application-connectivity-validator
          image: europe-docker.pkg.dev/kyma-project/prod/central-application-connectivity-validator:v20240404-457ea77c
          imagePullPolicy: IfNotPresent
          args:
            - "/app/centralapplicationconnectivityvalidator"
            - "--proxyPort=8080"
            - "--externalAPIPort=8081"
            - "--eventingPathPrefixV1=/%%APP_NAME%%/v1/events"
            - "--eventingPathPrefixV2=/%%APP_NAME%%/v2/events"
            - "--eventingPublisherHost=eventing-publisher-proxy.kyma-system"
            - "--eventingDestinationPath=/publish"
            - "--eventingPathPrefixEvents=/%%APP_NAME%%/events"
            - "--appNamePlaceholder=%%APP_NAME%%"
          env:
            - name: APP_LOG_FORMAT
              value: "json"
            - name: APP_LOG_LEVEL
              value: "warn"
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 20m
              memory: 64Mi
          readinessProbe:
            httpGet:
              path: /v1/health
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /v1/health
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
          ports:
            - containerPort: 8080
              name: http-proxy
            - containerPort: 8081
              name: http-api-port
          securityContext:
            runAsUser: 1000
            privileged: false
            allowPrivilegeEscalation: false
      priorityClassName: central-application-connectivity-validator-priority-class
---
# Source: application-connector/charts/central-application-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: central-application-gateway
  namespace: kyma-system
  labels:
    app: central-application-gateway
    release: application-connector
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: central-application-gateway
      release: application-connector
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: central-application-gateway
        app.kubernetes.io/part-of: application-connector-manager
        release: application-connector
    spec:
      serviceAccountName: central-application-gateway
      containers:
        - name: central-application-gateway
          image: europe-docker.pkg.dev/kyma-project/prod/central-application-gateway:v20240404-3975244b
          imagePullPolicy: IfNotPresent
          args:
            - "/app/applicationgateway"
            - "--proxyPort=8080"
            - "--proxyPortCompass=8082"
            - "--externalAPIPort=8081"
            - "--logLevel=info"
            - "--applicationSecretsNamespace=kyma-system"
            - "--requestTimeout=10"
            - "--proxyTimeout=10"
            - "--proxyCacheTTL=120"
          readinessProbe:
            httpGet:
              path: /v1/health
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /v1/health
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 20m
              memory: 64Mi
          ports:
            - containerPort: 8080
              name: http-proxy
            - containerPort: 8082
              name: http-proxy-mps
            - containerPort: 8081
              name: http-api-port
          securityContext:
            runAsUser: 1000
            privileged: false
            allowPrivilegeEscalation: false
      priorityClassName: central-application-gateway-priority-class
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/autoscaling.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    app: central-application-connectivity-validator
    release: application-connector
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
spec:
  minReplicas: 1
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: central-application-connectivity-validator
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: application-connector/charts/central-application-gateway/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: central-application-gateway
  namespace: kyma-system
  labels:
    app: central-application-gateway
    release: application-connector
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
spec:
  minReplicas: 1
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: central-application-gateway
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  name: applications.applicationconnector.kyma-project.io
spec:
  group: applicationconnector.kyma-project.io
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              properties:
                compassMetadata:
                  type: object
                  required:
                  - "authentication"
                  properties:
                    applicationId:
                      type: string
                    authentication:
                      type: object
                      required:
                      - "clientIds"
                      properties:
                        clientIds:
                          type: array
                          items:
                            type: string
                accessLabel:
                  type: string
                  maxLength: 63
                  pattern: '^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'
                description:
                  type: string
                skipInstallation:
                  type: boolean
                skipVerify:
                  type: boolean
                encodeUrl:
                  type: boolean
                  default: true
                labels:
                  nullable: true
                  additionalProperties:
                    type: string
                  type: object
                tenant:
                  type: string
                group:
                  type: string
                tags:
                  nullable: true
                  description: New fields used by V2 version
                  items:
                    type: string
                  type: array
                displayName:
                  type: string
                providerDisplayName:
                  type: string
                longDescription:
                  type: string
                services:
                  type: array
                  items:
                    type: object
                    required:
                    - "id"
                    - "name"
                    - "displayName"
                    - "providerDisplayName"
                    - "description"
                    - "entries"
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      identifier:
                        type: string
                      labels:
                        nullable: true
                        additionalProperties:
                          type: string
                        description: Deprecated
                        type: object
                      displayName:
                        type: string
                      description:
                        type: string
                      longDescription:
                        type: string
                      providerDisplayName:
                        type: string
                      authCreateParameterSchema:
                        description: New fields used by V2 version
                        type: string
                      entries:
                        type: array
                        items:
                          type: object
                          required:
                          - "type"
                          properties:
                            apiType:
                              type: string
                            type:
                              type: string
                              enum:
                              - "API"
                              - "Events"
                            gatewayUrl:
                              type: string
                            centralGatewayUrl:
                              type: string
                            accessLabel:
                              type: string
                              maxLength: 63
                              pattern: '^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'
                            targetUrl:
                              type: string
                            id:
                              type: string
                            name:
                              description: New fields used by V2 version
                              type: string
                            requestParametersSecretName:
                              type: string
                            specificationUrl:
                              type: string
                            credentials:
                              type: object
                              required:
                              - "type"
                              - "secretName"
                              properties:
                                type:
                                  type: string
                                secretName:
                                  type: string
                                authenticationUrl:
                                  type: string
                                csrfInfo:
                                  type: object
                                  required:
                                  - "tokenEndpointURL"
                                  properties:
                                    tokenEndpointURL:
                                      type: string
                      tags:
                        type: array
                        items:
                          type: string
              type: object
            status:
              properties:
                installationStatus:
                  description: Represents the status of Application release installation
                  properties:
                    description:
                      type: string
                    status:
                      type: string
                  required:
                  - status
                  type: object
              required:
              - installationStatus
              type: object
  scope: Cluster
  names:
    plural: applications
    singular: application
    kind: Application
    shortNames:
    - app
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  name: compassconnections.compass.kyma-project.io
spec:
  group: compass.kyma-project.io
  names:
    kind: CompassConnection
    listKind: CompassConnectionList
    plural: compassconnections
    singular: compassconnection
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                managementInfo:
                  properties:
                    connectorUrl:
                      description: 'URL used for maintaining the secure connection.'
                      type: string
                    directorUrl:
                      description: 'URL used for fetching Applications.'
                      type: string
                  required:
                    - connectorUrl
                    - directorUrl
                  type: object
                refreshCredentialsNow:
                  description: 'If set to `true`, ignores certificate expiration date and refreshes in the next round.'
                  type: boolean
                resyncNow:
                  description: 'If set to `true`, ignores `APP_MINIMAL_COMPASS_SYNC_TIME` and syncs in the next round.'
                  type: boolean
              required:
                - managementInfo
              type: object
            status:
              properties:
                connectionState:
                  type: string
                connectionStatus:
                  description: 'Represents the status of the connection to
                    Compass.'
                  properties:
                    certificateStatus:
                      description: 'Specifies the certificate issue and expiration dates.'
                      properties:
                        acquired:
                          description: 'Specifies when the certificate was acquired.'
                          format: date-time
                          nullable: true
                          type: string
                        notAfter:
                          description: 'Specifies when the certificate stops being valid.'
                          format: date-time
                          nullable: true
                          type: string
                        notBefore:
                          description: 'Specifies when the certificate becomes valid.'
                          format: date-time
                          nullable: true
                          type: string
                      type: object
                    error:
                      type: string
                    established:
                      description: 'Specifies when the connection was established.'
                      format: date-time
                      nullable: true
                      type: string
                    lastSuccess:
                      description: 'Specifies the date of the last successful synchronization with the Connector.'
                      format: date-time
                      nullable: true
                      type: string
                    lastSync:
                      description: 'Specifies the date of the last synchronization attempt.'
                      format: date-time
                      nullable: true
                      type: string
                    renewed:
                      description: 'Specifies the date of the last certificate renewal.'
                      format: date-time
                      nullable: true
                      type: string
                  required:
                    - certificateStatus
                  type: object
                synchronizationStatus:
                  description: 'Provides the status of the synchronization with the Director.'
                  nullable: true
                  properties:
                    error:
                      type: string
                    lastAttempt:
                      description: 'Specifies the date of the last synchronization attempt with the Director.'
                      format: date-time
                      nullable: true
                      type: string
                    lastSuccessfulApplication:
                      description: 'Specifies the date of the last successful application of resources fetched from Compass.'
                      format: date-time
                      nullable: true
                      type: string
                    lastSuccessfulFetch:
                      description: 'Specifies the date of the last successful fetch of resources from the Director.'
                      format: date-time
                      nullable: true
                      type: string
                  type: object
              required:
                - connectionState
                - connectionStatus
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: compass-runtime-agent/templates/priority-class.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: compass-runtime-agent-priority-class
value: 2000000
globalDefault: false
description: "Scheduling priority of compass-runtime-agent component. By default, compass-runtime-agent should not be blocked by unschedulable user workloads."
---
# Source: compass-runtime-agent/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: compass-runtime-agent
  namespace: kyma-system
  labels:
    app: compass-runtime-agent
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
---
# Source: compass-runtime-agent/templates/skr-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: skr-configmap
  namespace: kyma-system
data:
  is-managed-kyma-runtime: "true"
---
# Source: compass-runtime-agent/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: compass-runtime-agent
  labels:
    app: compass-runtime-agent
    release: application-connector
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
rules:
  - apiGroups: ["compass.kyma-project.io"]
    resources: ["compassconnections"]
    verbs: ["create", "get", "list", "update", "delete", "watch"]
  - apiGroups: ["applicationconnector.kyma-project.io"]
    resources: ["applications"]
    verbs: ["get", "list", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["nodes", "persistentvolumes"]
    verbs: ["get", "list"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["nodes"]
    verbs: ["get", "list"]
---
# Source: compass-runtime-agent/templates/cluster-role-binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: compass-runtime-agent
  labels:
    app: compass-runtime-agent
    release: compass-runtime-agent
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
subjects:
  - kind: ServiceAccount
    name: compass-runtime-agent
    namespace: kyma-system
roleRef:
  kind: ClusterRole
  name: compass-runtime-agent
  apiGroup: rbac.authorization.k8s.io
---
# Source: compass-runtime-agent/templates/resources-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: compass-runtime-agent
  namespace: kyma-system
  labels:
    app: compass-runtime-agent
    release: compass-runtime-agent
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["create", "get", "delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "update", "delete"]
---
# Source: compass-runtime-agent/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: compass-runtime-agent-client-cert-role
  namespace: kyma-system
  labels:
    app: compass-runtime-agent
    release: compass-runtime-agent
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "update", "delete"]
---
# Source: compass-runtime-agent/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: compass-runtime-agent-ca-cert-role
  namespace: istio-system
  labels:
    app: compass-runtime-agent
    release: compass-runtime-agent
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "update", "delete"]
---
# Source: compass-runtime-agent/templates/resources-role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: compass-runtime-agent
  namespace: kyma-system
  labels:
    app: compass-runtime-agent
    release: compass-runtime-agent
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
subjects:
  - kind: ServiceAccount
    name: compass-runtime-agent
    namespace: kyma-system
roleRef:
  kind: Role
  name: compass-runtime-agent
  apiGroup: rbac.authorization.k8s.io
---
# Source: compass-runtime-agent/templates/role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: compass-runtime-agent-client-cert-rolebinding
  namespace: kyma-system
  labels:
    app: compass-runtime-agent
    release: application-connector
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
subjects:
  - kind: ServiceAccount
    name: compass-runtime-agent
    namespace: kyma-system
roleRef:
  kind: Role
  name: compass-runtime-agent-client-cert-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: compass-runtime-agent/templates/role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: compass-runtime-agent-ca-cert-rolebinding
  namespace: istio-system
  labels:
    app: compass-runtime-agent
    release: compass-runtime-agent
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
subjects:
  - kind: ServiceAccount
    name: compass-runtime-agent
    namespace: kyma-system
roleRef:
  kind: Role
  name: compass-runtime-agent-ca-cert-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: compass-runtime-agent/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: compass-runtime-agent-service
  namespace: kyma-system
  labels:
    control-plane: compass-runtime-agent
    controller-tools.k8s.io: "1.0"
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
spec:
  selector:
    control-plane: compass-runtime-agent
    controller-tools.k8s.io: "1.0"
  ports:
    - port: 443
---
# Source: compass-runtime-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compass-runtime-agent
  namespace: kyma-system
  labels:
    app: compass-runtime-agent
    release: application-connector
    app.kubernetes.io/name: compass-runtime-agent
    app.kubernetes.io/managed-by: application-connector-manager
    app.kubernetes.io/instance: application-connector
    app.kubernetes.io/part-of: application-connector-manager
spec:
  selector:
    matchLabels:
      app: compass-runtime-agent
      release: compass-runtime-agent
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: compass-runtime-agent
        release: compass-runtime-agent
    spec:
      securityContext:
        runAsUser: 65535
        runAsGroup: 65535
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: compass-runtime-agent
      containers:
        - name: compass-runtime-agent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            procMount: default
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 8090
              hostPort: 0
              name: http-health
          image: europe-docker.pkg.dev/kyma-project/prod/compass-runtime-agent:v20240402-b8ff9e34
          imagePullPolicy: IfNotPresent
          args:
            - "/app/compass-runtime-agent"
          env:
            - name: APP_AGENT_CONFIGURATION_SECRET
              value: "kyma-system/compass-agent-configuration"
            - name: APP_CONTROLLER_SYNC_PERIOD
              value: "180s"
            - name: APP_MINIMAL_COMPASS_SYNC_TIME
              value: "15s"
            - name: APP_CERT_VALIDITY_RENEWAL_THRESHOLD
              value: "0.3"
            - name: APP_CLUSTER_CERTIFICATES_SECRET
              value: "kyma-system/cluster-client-certificates"
            - name: APP_CA_CERTIFICATES_SECRET
              value: "istio-system/kyma-gateway-certs-cacert"
            - name: APP_SKIP_COMPASS_TLS_VERIFY
              value: "true"
            - name: APP_SKIP_APPS_TLS_VERIFY
              value: "false"
            - name: APP_GATEWAY_PORT
              value: "8080"
            - name: APP_UPLOAD_SERVICE_URL
              value: ""
            - name: APP_QUERY_LOGGING
              value: "false"
            - name: APP_METRICS_LOGGING_TIME_INTERVAL
              value: "30m"
            - name: APP_RUNTIME_EVENTS_URL
              value: "https://gateway.kyma.example.com"
            - name: APP_RUNTIME_CONSOLE_URL
              value: "https://console.kyma.example.com"
            - name: APP_HEALTH_PORT
              value: "8090"
            - name: APP_CENTRAL_GATEWAY_SERVICE_URL
              value: "http://central-application-gateway.kyma-system.svc.cluster.local:8082"
          livenessProbe:
            httpGet:
              port: 8090
              path: "/healthz"
            initialDelaySeconds: 50
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              port: 8090
              path: "/healthz"
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 2
      priorityClassName: compass-runtime-agent-priority-class
